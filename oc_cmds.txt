#ARGOCD Category
#To get ArgoCD route
oc -n openshift-gitops get route
oc -n multicloud-gitops-hub get route

#To extract password for Argocd admin from Openshift
oc -n openshift-gitops extract secrets/openshift-gitops-cluster --to=-
oc -n multicloud-gitops-hub extract secrets/hub-gitops-cluster --to=-

#To open port forwarding from a pod to local machine
oc port-forward pod_name local_port:pod_port


#STORAGE Category
#List Worker nodes
oc get nodes -l node-role.kubernetes.io/worker=

#Label Worker nodes with label: cluster.ocs.openshift.io/openshift-storage=
oc label nodes -l node-role.kubernetes.io/worker= cluster.ocs.openshift.io/openshift-storage=

#To get storagecluster and pods in openshift-storage project
oc get storagecluster,pods -n openshift-storage

#To get operatorgroup, subs and csvs in openshift-local-storage/openshift-storage project
oc get operatorgroups,subscriptions,clusterserviceversions -n openshift-local-storage

#To get the storage classes
oc get storageclasses -o custom-columns='NAME:metadata.name,PROVISIONER:provisioner'

#To see the localvolumediscovery in openshift-local-storage namespace
oc get localvolumediscovery -n openshift-local-storage

#To get localvolumediscoveryresults
oc get localvolumediscoveryresults -o custom-columns='Name:metadata.name,PATH:status.discoveredDevices[*].path' -n openshift-local-storage

#to Get the list of subscriptions in a namespace such as openshift-storage
oc get subs -n openshift-storage

#To describe a subscription such as odf-operator in namespace: openshift-storage
oc describe sub odf-operator -n openshift-storage

#Inspect the desired Operator to verify its supported install modes and available channels. Example is of odf-operator.
oc describe packagemanifests odf-operator -n openshift-marketplace


#GENERAL Category
#To see console url from cli
oc whoami --show-console

#To get a list of ClusterOperators
oc get clusteroperators.config.openshift.io

#To get a clusterversion 
oc get clusterversion
oc describe clusterversion

#To Get the logs of systemd units on nodes
oc adm node-logs -u kubelet my-node-name

#To display journallogs
oc adm node-logs node-name

#To log into node
oc debug node/my-node-name
$chroot /host
$systemctl is-active kubelet
$crictl ps

#We can also debug deployments and run deployment as root
oc debug deployment/my-deployment-name --as-root

#opens a shell inside pod to run shell commands interactively and non interactively
oc rsh my-pod-name

#copy files to pod or use oc rsync to copy multiple files
oc cp /local/path my-pod:/container/path

#port forward
oc port-forward my-pod-name local-port:remote-port

#To increase verbosity of logs
oc get pod --loglevel 6
